[gd_resource type="VisualShader" load_steps=34 format=3 uid="uid://b4fyngmqyduxx"]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_othpp"]
varying_name = "world_pos"
varying_type = 4

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_d4po3"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(1, 0, 0), 5, Vector3(0, 0, 0)]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_j4053"]
size = Vector2(1040, 740)
expression = "// check if world pos is in the occlusion cutout bean
// from the camera to the collisin point closest to the 
// player.
vec3 pa = p - a, ba = b - a;
float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );
out = length( pa - ba*h ) - r;"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_unex3"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_dbeag"]
parameter_name = "albedo_texture"
texture_type = 1
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_mrkbc"]
varying_name = "mesh_normal"
varying_type = 4

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lxd4g"]
operator = 8

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_u741q"]
constant = Vector3(0, 1, 0)

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_p32kt"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lq6rw"]
operator = 8

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_fuipy"]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_p3vie"]
varying_name = "mesh_pos"
varying_type = 4

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_a3mdh"]

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_og8rf"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_vnxsc"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5fomx"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_vc8u2"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_bx13b"]
parameter_name = "texture_scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_d4po3"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_aeest"]

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_othpp"]
parameter_name = "camera_occlusion_cutout_noise"
qualifier = 1
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_othpp"]
parameter_name = "camera_occlusion_cutout_a"
qualifier = 1

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_d4po3"]
parameter_name = "camera_occlusion_cutout_b"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_othpp"]
parameter_name = "camera_occlusion_cutout_radius"
qualifier = 1

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_kcmxv"]
constant = Vector3(1, 1, 1)

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_17t60"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_dgcqm"]
varying_name = "mesh_pos"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kwxye"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_oorxi"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_hw56o"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_esi0l"]
varying_name = "world_pos"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_415qw"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_3ucss"]
varying_name = "mesh_normal"
varying_type = 4

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, depth_test_default, cull_disabled, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 var_world_pos;
varying vec3 var_mesh_normal;
varying vec3 var_mesh_pos;

uniform vec2 texture_scale = vec2(1.000000, 1.000000);
uniform sampler2D albedo_texture : source_color, filter_nearest, repeat_enable;
global uniform vec3 camera_occlusion_cutout_a;
global uniform vec3 camera_occlusion_cutout_b;
global uniform float camera_occlusion_cutout_radius;
global uniform sampler2D camera_occlusion_cutout_noise : filter_nearest, repeat_enable;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
// Input:5
	mat4 n_out5p0 = MODEL_MATRIX;


// Input:4
	vec3 n_out4p0 = VERTEX;


// TransformVectorMult:6
	vec3 n_out6p0 = (n_out5p0 * vec4(n_out4p0, 1.0)).xyz;


// VaryingSetter:7
	var_world_pos = n_out6p0;


// Input:8
	vec3 n_out8p0 = NORMAL;


// VaryingSetter:9
	var_mesh_normal = n_out8p0;


// VaryingSetter:10
	var_mesh_pos = n_out4p0;


}

void fragment() {
// VaryingGetter:33
	vec3 n_out33p0 = var_mesh_pos;


// VaryingGetter:27
	vec3 n_out27p0 = var_mesh_normal;


// Vector3Constant:29
	vec3 n_out29p0 = vec3(0.000000, 1.000000, 0.000000);


// VectorOp:28
	vec3 n_out28p0 = cross(n_out27p0, n_out29p0);


// VectorFunc:30
	vec3 n_out30p0 = normalize(n_out28p0);


// DotProduct:34
	float n_out34p0 = dot(n_out33p0, n_out30p0);


// FloatOp:38
	float n_in38p1 = -1.00000;
	float n_out38p0 = n_out34p0 * n_in38p1;


// VectorOp:31
	vec3 n_out31p0 = cross(n_out27p0, n_out30p0);


// VectorFunc:32
	vec3 n_out32p0 = normalize(n_out31p0);


// DotProduct:35
	float n_out35p0 = dot(n_out33p0, n_out32p0);


// VectorCompose:36
	vec2 n_out36p0 = vec2(n_out38p0, n_out35p0);


// Vector2Parameter:39
	vec2 n_out39p0 = texture_scale;


// VectorOp:37
	vec2 n_out37p0 = n_out36p0 * n_out39p0;


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(albedo_texture, n_out37p0);


// VaryingGetter:13
	vec3 n_out13p0 = var_world_pos;


// Vector3Parameter:46
	vec3 n_out46p0 = camera_occlusion_cutout_a;


// Vector3Parameter:47
	vec3 n_out47p0 = camera_occlusion_cutout_b;


// FloatParameter:48
	float n_out48p0 = camera_occlusion_cutout_radius;


	float n_out19p0;
// Expression:19
	n_out19p0 = 0.0;
	{
		// check if world pos is in the occlusion cutout bean
		// from the camera to the collisin point closest to the 
		// player.
		vec3 pa = n_out13p0 - n_out46p0, ba = n_out47p0 - n_out46p0;
		float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );
		n_out19p0 = length( pa - ba*h ) - n_out48p0;
	}


// Vector3Constant:49
	vec3 n_out49p0 = vec3(1.000000, 1.000000, 1.000000);


// Vector3Constant:50
	vec3 n_out50p0 = vec3(0.000000, 0.000000, 0.000000);


// TextureParameterTriplanar:44
	vec4 n_out44p0 = triplanar_texture(camera_occlusion_cutout_noise, n_out49p0, n_out50p0);


	vec4 n_out41p0;
// Texture2D:41
	n_out41p0 = texture(camera_occlusion_cutout_noise, UV);
	float n_out41p1 = n_out41p0.r;


// FloatOp:43
	float n_out43p0 = n_out19p0 + n_out41p1;


	vec3 n_out16p0;
// If:16
	float n_in16p1 = 0.00000;
	float n_in16p2 = 0.00001;
	vec3 n_in16p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in16p4 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_in16p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out43p0 - n_in16p1) < n_in16p2)
	{
		n_out16p0 = n_in16p3;
	}
	else if(n_out43p0 < n_in16p1)
	{
		n_out16p0 = n_in16p5;
	}
	else
	{
		n_out16p0 = n_in16p4;
	}
	float n_out16p1 = n_out16p0.r;


// Output:0
	ALBEDO = vec3(n_out21p0.xyz);
	ALPHA = n_out16p1;


}
"
modes/depth_draw = 1
modes/cull = 2
varyings/world_pos = "0,4"
varyings/mesh_normal = "0,4"
varyings/mesh_pos = "0,4"
nodes/vertex/0/position = Vector2(2840, 2420)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_kwxye")
nodes/vertex/4/position = Vector2(1240, 2400)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_oorxi")
nodes/vertex/5/position = Vector2(1240, 2740)
nodes/vertex/6/node = SubResource("VisualShaderNodeTransformVecMult_hw56o")
nodes/vertex/6/position = Vector2(1900, 2660)
nodes/vertex/7/node = SubResource("VisualShaderNodeVaryingSetter_esi0l")
nodes/vertex/7/position = Vector2(2340, 2740)
nodes/vertex/8/node = SubResource("VisualShaderNodeInput_415qw")
nodes/vertex/8/position = Vector2(1240, 3080)
nodes/vertex/9/node = SubResource("VisualShaderNodeVaryingSetter_3ucss")
nodes/vertex/9/position = Vector2(2340, 3080)
nodes/vertex/10/node = SubResource("VisualShaderNodeVaryingSetter_dgcqm")
nodes/vertex/10/position = Vector2(2340, 2400)
nodes/vertex/connections = PackedInt32Array(5, 0, 6, 0, 4, 0, 6, 1, 6, 0, 7, 0, 8, 0, 9, 0, 4, 0, 10, 0)
nodes/fragment/0/position = Vector2(4420, 3000)
nodes/fragment/13/node = SubResource("VisualShaderNodeVaryingGetter_othpp")
nodes/fragment/13/position = Vector2(560, 2760)
nodes/fragment/16/node = SubResource("VisualShaderNodeIf_d4po3")
nodes/fragment/16/position = Vector2(3220, 3140)
nodes/fragment/19/node = SubResource("VisualShaderNodeExpression_j4053")
nodes/fragment/19/position = Vector2(1300, 3160)
nodes/fragment/19/size = Vector2(1040, 740)
nodes/fragment/19/input_ports = "0,4,p;1,4,a;2,4,b;3,0,r;"
nodes/fragment/19/output_ports = "0,0,out;"
nodes/fragment/19/expression = "// check if world pos is in the occlusion cutout bean
// from the camera to the collisin point closest to the 
// player.
vec3 pa = p - a, ba = b - a;
float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );
out = length( pa - ba*h ) - r;"
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_unex3")
nodes/fragment/21/position = Vector2(3240, 2440)
nodes/fragment/23/node = SubResource("VisualShaderNodeTexture2DParameter_dbeag")
nodes/fragment/23/position = Vector2(1880, 2340)
nodes/fragment/27/node = SubResource("VisualShaderNodeVaryingGetter_mrkbc")
nodes/fragment/27/position = Vector2(-1420, 2000)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_lxd4g")
nodes/fragment/28/position = Vector2(-660, 1160)
nodes/fragment/29/node = SubResource("VisualShaderNodeVec3Constant_u741q")
nodes/fragment/29/position = Vector2(-1520, 1360)
nodes/fragment/30/node = SubResource("VisualShaderNodeVectorFunc_p32kt")
nodes/fragment/30/position = Vector2(-200, 1160)
nodes/fragment/31/node = SubResource("VisualShaderNodeVectorOp_lq6rw")
nodes/fragment/31/position = Vector2(280, 1880)
nodes/fragment/32/node = SubResource("VisualShaderNodeVectorFunc_fuipy")
nodes/fragment/32/position = Vector2(760, 1880)
nodes/fragment/33/node = SubResource("VisualShaderNodeVaryingGetter_p3vie")
nodes/fragment/33/position = Vector2(420, 1500)
nodes/fragment/34/node = SubResource("VisualShaderNodeDotProduct_a3mdh")
nodes/fragment/34/position = Vector2(1120, 1200)
nodes/fragment/35/node = SubResource("VisualShaderNodeDotProduct_og8rf")
nodes/fragment/35/position = Vector2(1420, 1920)
nodes/fragment/36/node = SubResource("VisualShaderNodeVectorCompose_vnxsc")
nodes/fragment/36/position = Vector2(2220, 1460)
nodes/fragment/37/node = SubResource("VisualShaderNodeVectorOp_5fomx")
nodes/fragment/37/position = Vector2(2700, 1400)
nodes/fragment/38/node = SubResource("VisualShaderNodeFloatOp_vc8u2")
nodes/fragment/38/position = Vector2(1620, 1140)
nodes/fragment/39/node = SubResource("VisualShaderNodeVec2Parameter_bx13b")
nodes/fragment/39/position = Vector2(2040, 1840)
nodes/fragment/41/node = SubResource("VisualShaderNodeTexture_d4po3")
nodes/fragment/41/position = Vector2(2160, 3980)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatOp_aeest")
nodes/fragment/43/position = Vector2(2680, 3600)
nodes/fragment/44/node = SubResource("VisualShaderNodeTextureParameterTriplanar_othpp")
nodes/fragment/44/position = Vector2(1280, 4040)
nodes/fragment/46/node = SubResource("VisualShaderNodeVec3Parameter_othpp")
nodes/fragment/46/position = Vector2(440, 2940)
nodes/fragment/47/node = SubResource("VisualShaderNodeVec3Parameter_d4po3")
nodes/fragment/47/position = Vector2(420, 3340)
nodes/fragment/48/node = SubResource("VisualShaderNodeFloatParameter_othpp")
nodes/fragment/48/position = Vector2(420, 3740)
nodes/fragment/49/node = SubResource("VisualShaderNodeVec3Constant_kcmxv")
nodes/fragment/49/position = Vector2(380, 4360)
nodes/fragment/50/node = SubResource("VisualShaderNodeVec3Constant_17t60")
nodes/fragment/50/position = Vector2(380, 4600)
nodes/fragment/connections = PackedInt32Array(13, 0, 19, 0, 23, 0, 21, 2, 27, 0, 28, 0, 29, 0, 28, 1, 28, 0, 30, 0, 27, 0, 31, 0, 30, 0, 31, 1, 31, 0, 32, 0, 33, 0, 34, 0, 30, 0, 34, 1, 33, 0, 35, 0, 32, 0, 35, 1, 35, 0, 36, 1, 36, 0, 37, 0, 37, 0, 21, 0, 34, 0, 38, 0, 38, 0, 36, 0, 39, 0, 37, 1, 19, 0, 43, 0, 43, 0, 16, 0, 46, 0, 19, 1, 47, 0, 19, 2, 48, 0, 19, 3, 21, 0, 0, 0, 16, 1, 0, 1, 44, 1, 41, 2, 41, 1, 43, 1, 49, 0, 44, 0, 50, 0, 44, 1)
